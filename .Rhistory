),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
if (input$variable == "All"){
filtered <- combined_df
} else {
filtered <- combined_df %>%
filter(Type == input$variable)
}
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly()
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = c("All", unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1])),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
if (input$variable == "All"){
filtered <- combined_df
} else {
filtered <- combined_df %>%
filter("Please Select a Flower Type:" == input$variable)
}
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly()
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = c("All", unique(combined_df$`Flower Type`)), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
if (input$variable == "All"){
filtered <- combined_df
} else {
filtered <- combined_df %>%
filter("Please Select a Flower Type:" == input$variable)
}
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly()
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = c("All", unique(combined_df$`Flower Type`)), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
if (input$variable == "All"){
filtered <- combined_df
} else {
filtered <- combined_df %>%
filter("Please Select a Flower Type:" == input$variable)
}
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly()
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = c("All", unique(combined_df$`Flower Type`)), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = c("All", unique(combined_df$Month)), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
data <- combined_df
if (input$variable != "All") {
data <- data[data$`Flower Type` == input$variable,]
}
if (input$var != "All") {
data <- data[data$Month == input$var,]
}
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly()
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`)), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var)
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly()
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- ggplot(filtered, aes(x=reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- ggplot(filtered, aes(x= "Store Name" :reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- ggplot(filtered, aes(x= "Store Name" =reorder(`Store Name`,-Sales), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- ggplot(filtered, aes(x= rename("Store Name"= reorder(`Store Name`,-Sales)), y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- filtered %>% mutate("Store Name"=fct_reorder(`Store Name`,Sales)) %>% ggplot(aes(x='Store Name' , y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- filtered %>% mutate("sales"=fct_reorder(Sales)) %>% ggplot(aes(x=`Store Name` , y=sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
# Define UI for application
ui<- fillPage(
# Header or title Panel
titlePanel(h4('SALES FOR EACH FLOWER TYPE BY MONTH', align = "center")),
# Sidebar panel
sidebarPanel(
radioButtons("variable", "Please Select a Flower Type:",
choices = unique(combined_df$`Flower Type`), selected = unique(combined_df$`Flower Type`)[1]),
br(),
br(),
radioButtons("var", "Please Select a Month:",
choices = unique(combined_df$Month), selected = unique(combined_df$Month)[1]),
br(),
br(),
br(),
br(),
),
tableOutput("data"),
# Main Panel
mainPanel(
plotOutput("myhist")
)
)
server=  function(input, output) {
output$myhist <- renderPlot({
filtered <-
combined_df %>% filter(`Flower Type` == input$variable,
Month== input$var
)
b <- filtered %>% mutate("store"=fct_reorder(`Store Name`)) %>% ggplot(aes(x=store , y=Sales)) +
geom_bar(stat = "identity", fill="#006f75")+theme_bw() +
xlab("") + ggtitle(input$variable)+
theme(axis.text.x=element_text(angle=90, hjust=1))
b %>% ggplotly
})
}
shinyApp(server= server, ui=ui)
unclass(as.Date("1971-01-01"))
rnorm(1.96)
pnorm(1.96)
Cpeople <- ournames %in% grep("^C", ournames, value=TRUE)
indat <- c("Ash Rd", "Ash Cir", "Ash St")
grepl("Rd, Ave, Dr, St", indat)
grepl("[Rd]")
mylist <- list(1,2,"C",4,5)
unlist(mylist)
x<-5:8
names(x) <- letters[5:8]
x
x <- c(12L,6L,10L,8L,15L,14L,19L,18L,23L,59L)
median(x)
type(median(x))
x <- NA
y <- x/1
y
